// Copyright (c) 2009 The Foundry Visionmongers Ltd.  All Rights Reserved.

// Please include ddImageVersionNumbers.h for the library version number
// This file is provided for back-compatibility only.

#ifndef _DD_IMAGE_VERSION_H_
#define _DD_IMAGE_VERSION_H_

#include "ddImageVersionNumbers.h" // file generated by make

#define DD_IMAGE_VERSION_MAJOR kDDImageVersionMajorNum
#define DD_IMAGE_VERSION_MINOR kDDImageVersionMinorNum

#include "DDImage_API.h"

namespace DD
{
  namespace Image
  {

    class Version;

    extern DDImage_API const Version gVersion;
    extern DDImage_API const Version* gApplicationVersion;
    extern DDImage_API double gScriptVersion;

    /// Returns a structure that you can query to get the DDImage version
    /// in various forms, such as text or numbers.
    inline const Version& version() { return gVersion; }

    /// Returns a structure that you can query to get the Nuke version
    /// in various forms.If DDImage is not being used by Nuke it just
    /// returns the DDImage version.
    inline const Version& applicationVersion()
    {
      if(gApplicationVersion) { 
        return *gApplicationVersion; 
      }

      return version();
    }

    /// This is a version of Nuke that was used to write the currently
    /// loading script, encoded as M.mr where M is the major number
    /// and m is the minor, and r is a revision. If a script is not
    /// being currently loaded this is set to
    /// applicationVersion().majorMinorReleaseDouble() which is the
    /// number that will be saved when a script is written.
    /// This can be used to preset back-compatibility knobs in an Op.
    inline double scriptVersion() { return gScriptVersion; }

  }
}

#endif
